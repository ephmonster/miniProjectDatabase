Query 1: Select the amount of planes of each makeandmodel there are.

"HashAggregate  (cost=305.25..305.44 rows=20 width=20) (actual time=4.978..4.982 rows=20 loops=1)"
"  Group Key: makeandmodel"
"  Batches: 1  Memory Usage: 24kB"
"  ->  Seq Scan on airplane  (cost=0.00..240.83 rows=12883 width=12) (actual time=0.113..1.466 rows=12883 loops=1)"
"Planning Time: 1.721 ms"
"Execution Time: 6.357 ms"

Query 2: Select all planes in order of their manufacture date.

"Sort  (cost=1120.30..1152.51 rows=12883 width=28) (actual time=5.734..7.214 rows=12883 loops=1)"
"  Sort Key: datemanufactored"
"  Sort Method: quicksort  Memory: 1104kB"
"  ->  Seq Scan on airplane  (cost=0.00..240.83 rows=12883 width=28) (actual time=0.026..1.383 rows=12883 loops=1)"
"Planning Time: 1.511 ms"
"Execution Time: 7.828 ms"

Query 3: Select the serial number of all airplanes produced by Boeing.

"Hash Join  (cost=1.26..283.07 rows=644 width=4) (actual time=0.448..9.740 rows=3952 loops=1)"
"  Hash Cond: ((airplane.makeandmodel)::text = (airplanetype.makeandmodel)::text)"
"  ->  Seq Scan on airplane  (cost=0.00..240.83 rows=12883 width=16) (actual time=0.056..2.573 rows=12883 loops=1)"
"  ->  Hash  (cost=1.25..1.25 rows=1 width=32) (actual time=0.376..0.377 rows=6 loops=1)"
"        Buckets: 1024  Batches: 1  Memory Usage: 9kB"
"        ->  Seq Scan on airplanetype  (cost=0.00..1.25 rows=1 width=32) (actual time=0.351..0.359 rows=6 loops=1)"
"              Filter: ((makeandmodel)::text ~~ 'Boeing%'::text)"
"              Rows Removed by Filter: 14"
"Planning Time: 5.868 ms"
"Execution Time: 10.075 ms"

Query 4: Select all airplanes with a range of more than 1300km

"Hash Join  (cost=1.34..283.15 rows=4509 width=16) (actual time=0.754..4.009 rows=1961 loops=1)"
"  Hash Cond: ((a.makeandmodel)::text = (b.makeandmodel)::text)"
"  ->  Seq Scan on airplane a  (cost=0.00..240.83 rows=12883 width=16) (actual time=0.486..1.499 rows=12883 loops=1)"
"  ->  Hash  (cost=1.25..1.25 rows=7 width=32) (actual time=0.064..0.066 rows=3 loops=1)"
"        Buckets: 1024  Batches: 1  Memory Usage: 9kB"
"        ->  Seq Scan on airplanetype b  (cost=0.00..1.25 rows=7 width=32) (actual time=0.048..0.052 rows=3 loops=1)"
"              Filter: (range > 13000)"
"              Rows Removed by Filter: 17"
"Planning Time: 1.278 ms"
"Execution Time: 4.097 ms"

Query 5: Update the range of the airbus A319 to 10000km

"Update on airplanetype  (cost=0.00..1.25 rows=0 width=0) (actual time=2.957..2.957 rows=0 loops=1)"
"  ->  Seq Scan on airplanetype  (cost=0.00..1.25 rows=1 width=10) (actual time=0.028..0.031 rows=1 loops=1)"
"        Filter: ((makeandmodel)::text = 'Airbus A319'::text)"
"        Rows Removed by Filter: 19"
"Planning Time: 0.281 ms"
"Execution Time: 6.655 ms"

Query6: Update the fuel price of Avgas to $5

"Update on fueltype  (cost=0.00..1.04 rows=0 width=0) (actual time=0.135..0.135 rows=0 loops=1)"
"  ->  Seq Scan on fueltype  (cost=0.00..1.04 rows=1 width=14) (actual time=0.058..0.058 rows=1 loops=1)"
"        Filter: ((typeoffuel)::text = 'Avgas'::text)"
"        Rows Removed by Filter: 2"
"Planning Time: 4.905 ms"
"Execution Time: 0.215 ms"

Query 7: Delete all tuggings (recordings of a tug tugging an airplane) that happened more than 5 months prior.\

"Delete on tugs  (cost=0.00..4829.59 rows=0 width=0) (actual time=475.680..475.681 rows=0 loops=1)"
"  ->  Seq Scan on tugs  (cost=0.00..4829.59 rows=20423 width=6) (actual time=1.005..183.058 rows=9967 loops=1)"
"        Filter: (date < (CURRENT_DATE - '5 mons'::interval))"
"        Rows Removed by Filter: 178632"
"Planning Time: 3.598 ms"
"Execution Time: 475.743 ms"

Query 8: Delete all truck loads from more than 5 months ago

"Delete on truckload  (cost=0.00..4973.59 rows=0 width=0) (actual time=478.365..478.366 rows=0 loops=1)"
"  ->  Seq Scan on truckload  (cost=0.00..4973.59 rows=19703 width=6) (actual time=0.359..95.017 rows=21135 loops=1)"
"        Filter: (date < (CURRENT_DATE - '5 mons'::interval))"
"        Rows Removed by Filter: 178956"
"Planning Time: 3.975 ms"
"Execution Time: 478.449 ms"

Stage 3 -- Additional Queries

Query 1: Select all trucks at location X which had a refuel on day Y
LOG:
"Hash Join  (cost=99.99..1616.39 rows=105 width=8) (actual time=1.676..3.615 rows=89 loops=1)"
"  Hash Cond: ((b.licenseplate)::text = (a.licenseplate)::text)"
"  ->  Bitmap Heap Scan on truckload b  (cost=19.25..1531.99 rows=1398 width=8) (actual time=0.502..2.170 rows=1488 loops=1)"
"        Recheck Cond: (date = '2024-04-08'::date)"
"        Heap Blocks: exact=928"
"        ->  Bitmap Index Scan on idx_truckload_date_typeoffuel  (cost=0.00..18.91 rows=1398 width=0) (actual time=0.349..0.349 rows=1488 loops=1)"
"              Index Cond: (date = '2024-04-08'::date)"
"  ->  Hash  (cost=77.00..77.00 rows=299 width=8) (actual time=1.088..1.089 rows=299 loops=1)"
"        Buckets: 1024  Batches: 1  Memory Usage: 20kB"
"        ->  Seq Scan on fuelingtruck a  (cost=0.00..77.00 rows=299 width=8) (actual time=0.038..0.995 rows=299 loops=1)"
"              Filter: ((location)::text = 'LAX'::text)"
"              Rows Removed by Filter: 3701"
"Planning Time: 1.791 ms"
"Execution Time: 4.793 ms"

Query 2: Select all airplanes that are in service and use a given type of fuel

LOG: "Hash Join  (cost=1.26..300.28 rows=644 width=4) (actual time=0.098..8.430 rows=4536 loops=1)"
"  Hash Cond: ((a.makeandmodel)::text = (b.makeandmodel)::text)"
"  ->  Seq Scan on airplane a  (cost=0.00..258.04 rows=12883 width=16) (actual time=0.038..3.534 rows=12883 loops=1)"
"        Filter: (in_service = 1)"
"  ->  Hash  (cost=1.25..1.25 rows=1 width=32) (actual time=0.032..0.035 rows=7 loops=1)"
"        Buckets: 1024  Batches: 1  Memory Usage: 9kB"
"        ->  Seq Scan on airplanetype b  (cost=0.00..1.25 rows=1 width=32) (actual time=0.017..0.023 rows=7 loops=1)"
"              Filter: ((typeoffuel)::text = 'Avgas'::text)"
"              Rows Removed by Filter: 13"
"Planning Time: 0.577 ms"
"Execution Time: 9.891 ms"

Query 3: Select all airplanes which had more than 10 takeoffs
LOG: "Finalize HashAggregate  (cost=9566.56..9727.59 rows=4294 width=4) (actual time=748.095..757.033 rows=12854 loops=1)"
"  Group Key: a.serialnumber"
"  Filter: (count(*) > 10)"
"  Batches: 1  Memory Usage: 1425kB"
"  Rows Removed by Filter: 29"
"  ->  Gather  (cost=8085.01..9502.14 rows=12883 width=12) (actual time=712.694..723.622 rows=25739 loops=1)"
"        Workers Planned: 1"
"        Workers Launched: 1"
"        ->  Partial HashAggregate  (cost=7085.01..7213.84 rows=12883 width=12) (actual time=579.415..584.139 rows=12870 loops=2)"
"              Group Key: a.serialnumber"
"              Batches: 1  Memory Usage: 1425kB"
"              Worker 0:  Batches: 1  Memory Usage: 1425kB"
"              ->  Hash Join  (cost=386.87..5908.01 rows=235401 width=4) (actual time=11.403..428.588 rows=200091 loops=2)"
"                    Hash Cond: (b.serialnumber = a.serialnumber)"
"                    ->  Parallel Seq Scan on landingtakingoff b  (cost=0.00..4903.01 rows=235401 width=4) (actual time=0.073..186.341 rows=200091 loops=2)"
"                    ->  Hash  (cost=225.83..225.83 rows=12883 width=4) (actual time=11.149..11.151 rows=12883 loops=2)"
"                          Buckets: 16384  Batches: 1  Memory Usage: 581kB"
"                          ->  Seq Scan on airplane a  (cost=0.00..225.83 rows=12883 width=4) (actual time=0.893..6.533 rows=12883 loops=2)"
"Planning Time: 5.008 ms"
"Execution Time: 760.600 ms"

